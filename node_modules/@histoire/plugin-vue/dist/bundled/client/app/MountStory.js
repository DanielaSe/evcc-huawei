import { defineComponent as h, ref as v, watch as y, onMounted as w, onUnmounted as S, h as b } from "@histoire/vendors/vue";
import * as r from "virtual:$histoire-generated-global-setup";
import * as s from "virtual:$histoire-setup";
import { createApp as M, h as a, Suspense as V } from "vue";
import { registerGlobalComponents as x } from "./global-components.js";
import { RouterLinkStub as A } from "./RouterLinkStub.js";
const R = h({
  name: "MountStory",
  props: {
    story: {
      type: Object,
      required: !0
    }
  },
  setup(n) {
    const i = v();
    let t;
    async function p() {
      const u = [];
      t = M({
        name: "MountStorySubApp",
        render: () => {
          const e = a(n.story.file.component, {
            story: n.story
          }), o = [];
          o.push(e);
          for (const [d, l] of u.entries())
            o.push(
              a(l, {
                story: n.story,
                variant: null
              }, () => o[d])
            );
          return a(V, void 0, o.at(-1));
        }
      }), x(t), t.component("RouterLink", A), y(() => n.story.variants, () => {
        t._instance.proxy.$forceUpdate();
      });
      const m = {
        app: t,
        story: n.story,
        variant: null,
        addWrapper: (e) => {
          u.push(e);
        }
      };
      if (typeof (r == null ? void 0 : r.setupVue3) == "function") {
        const e = r.setupVue3;
        await e(m);
      }
      if (typeof (s == null ? void 0 : s.setupVue3) == "function") {
        const e = s.setupVue3;
        await e(m);
      }
      u.reverse();
      const f = document.createElement("div");
      i.value.appendChild(f), t.mount(f);
    }
    function c() {
      t == null || t.unmount();
    }
    return y(() => n.story.id, async () => {
      c(), await p();
    }), w(async () => {
      await p();
    }), S(() => {
      c();
    }), {
      el: i
    };
  },
  render() {
    return b("div", {
      ref: "el"
    });
  }
});
export {
  R as default
};
