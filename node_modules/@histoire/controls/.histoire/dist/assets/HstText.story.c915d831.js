var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
import { ax as _export_sfc, d as defineComponent, r as ref, a as openBlock, j as createBlock, k as withCtx, f as renderSlot, e as createBaseVNode, x as mergeProps, n as normalizeClass, h as normalizeStyle, q as resolveComponent, l as createVNode } from "./vendor.2833ae3d.js";
import { H as HstWrapper } from "./HstWrapper.246b6982.js";
const _hoisted_1 = ["value"];
const __default__ = {
  name: "HstText"
};
const _sfc_main$1 = /* @__PURE__ */ defineComponent(__spreadProps(__spreadValues({}, __default__), {
  props: {
    title: { type: String, required: false },
    modelValue: { type: String, required: true }
  },
  emits: {
    "update:modelValue": (newValue) => true
  },
  setup(__props, { emit }) {
    const input = ref();
    return (_ctx, _cache) => {
      return openBlock(), createBlock(HstWrapper, {
        title: __props.title,
        class: normalizeClass(["htw-cursor-text htw-items-center", _ctx.$attrs.class]),
        style: normalizeStyle(_ctx.$attrs.style),
        onClick: _cache[1] || (_cache[1] = ($event) => input.value.focus())
      }, {
        actions: withCtx(() => [
          renderSlot(_ctx.$slots, "actions")
        ]),
        default: withCtx(() => [
          createBaseVNode("input", mergeProps({
            ref_key: "input",
            ref: input
          }, __spreadProps(__spreadValues({}, _ctx.$attrs), { class: null, style: null }), {
            type: "text",
            value: __props.modelValue,
            class: "htw-text-inherit htw-bg-transparent htw-w-full htw-outline-none htw-px-2 htw-py-1 -htw-my-1 htw-border htw-border-solid htw-border-black/25 dark:htw-border-white/25 focus:htw-border-primary-500 dark:focus:htw-border-primary-500 htw-rounded-sm",
            onInput: _cache[0] || (_cache[0] = ($event) => emit("update:modelValue", $event.target.value))
          }), null, 16, _hoisted_1)
        ]),
        _: 3
      }, 8, ["title", "class", "style"]);
    };
  }
}));
_sfc_main$1.__file = "src/components/text/HstText.vue";
var HstText = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["__file", "/Users/akryum/Projects/histoire/packages/histoire-controls/src/components/text/HstText.vue"]]);
const _sfc_main = /* @__PURE__ */ defineComponent({
  name: "HstText.story",
  setup(__props) {
    function initState() {
      return {
        label: "My really long label",
        text: ""
      };
    }
    return (_ctx, _cache) => {
      const _component_Variant = resolveComponent("Variant");
      const _component_Story = resolveComponent("Story");
      return openBlock(), createBlock(_component_Story, {
        title: "HstText",
        layout: {
          type: "grid",
          width: "100%"
        }
      }, {
        default: withCtx(() => [
          createVNode(_component_Variant, {
            title: "default",
            "init-state": initState
          }, {
            default: withCtx(({ state }) => [
              createVNode(HstText, {
                modelValue: state.text,
                "onUpdate:modelValue": ($event) => state.text = $event,
                title: state.label
              }, null, 8, ["modelValue", "onUpdate:modelValue", "title"])
            ]),
            controls: withCtx(({ state }) => [
              createVNode(HstText, {
                modelValue: state.label,
                "onUpdate:modelValue": ($event) => state.label = $event,
                title: "Label"
              }, null, 8, ["modelValue", "onUpdate:modelValue"]),
              createVNode(HstText, {
                modelValue: state.text,
                "onUpdate:modelValue": ($event) => state.text = $event,
                title: "Text"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            _: 1
          }),
          createVNode(_component_Variant, {
            title: "no-label",
            "init-state": initState
          }, {
            default: withCtx(({ state }) => [
              createVNode(HstText, {
                modelValue: state.text,
                "onUpdate:modelValue": ($event) => state.text = $event,
                placeholder: "Enter some text..."
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            controls: withCtx(({ state }) => [
              createVNode(HstText, {
                modelValue: state.text,
                "onUpdate:modelValue": ($event) => state.text = $event,
                title: "Text"
              }, null, 8, ["modelValue", "onUpdate:modelValue"])
            ]),
            _: 1
          })
        ]),
        _: 1
      });
    };
  }
});
_sfc_main.__file = "src/components/text/HstText.story.vue";
var HstText_story = /* @__PURE__ */ _export_sfc(_sfc_main, [["__file", "/Users/akryum/Projects/histoire/packages/histoire-controls/src/components/text/HstText.story.vue"]]);
export { HstText_story as default };
