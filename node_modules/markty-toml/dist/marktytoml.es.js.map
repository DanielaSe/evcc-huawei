{"version":3,"file":"marktytoml.es.js","sources":["../node_modules/markty/dist/markty.es.js","../src/index.js"],"sourcesContent":["/* eslint no-unused-vars: \"warn\" */\nfunction markty(str, reg, rules, unlimited) {\n  if ( unlimited === void 0 ) unlimited = false;\n\n  var prev, match, chunk, last = 0, out = '';\n  var tokenizer = reg;\n  while ( (match = tokenizer.exec(str)) ) {\n    prev = str.substring(last, match.index);\n    last = tokenizer.lastIndex;\n\n    if (rules && typeof(rules) === \"function\") {\n      chunk = rules(str, match);\n    } else {\n      chunk = rules;\n    }\n\n    out += prev;\n    out += chunk;\n  }\n  out += str.substring(last);\n\n  if( tokenizer.test(out) && unlimited === true ) {\n    return markty(out, new RegExp(tokenizer), rules, true);\n  } else {\n    return out;\n  }\n}\n\nexport default markty;\n//# sourceMappingURL=markty.es.js.map\n","/*eslint no-unused-vars: 1*/\nimport markty from 'markty'\n\n\nexport default function marktytoml (TOML) {\n  let matchThis = new RegExp(`^\\\\s*\\\\[(\\\\[)?(.*?)\\\\]\\\\]?(?= *$)((?:[\\\\w\\\\W](?!^\\\\s*\\\\[))*)`, 'gm')\n  let json = {}\n\n  // preprocess to assert the string starts with a node like []\n  TOML = TOML[0] === \"[\" ? TOML : \"[]\\n\"+TOML\n\n  // catch edge cases before processing\n  TOML = TOML.replace(/('{3,}(?:(?!'{3,})[\\w\\W]+?)'{3,})/gm, (s, literal)=> {\n    // If string literal simulates a header, like [grand.parent], \n    // we should escape it so that the process doesn't think it's a genuine header.\n    // Neutralize any line starting with [ and convert it to ⭼[⭺ (to be converted back later)\n    if(literal){return literal.replace(/^(\\s*)(\\[)/gm, '$1__>>[<<__')}\n  })\n\n  markty(TOML, matchThis, (string, match) => {\n      // let [token, header_array, header_path, body] = match\n      // let [  0,        1,            2,      3   ] = match\n\n      if (match[1]){  // header is like [[grand.parent]]\n        // @TODO: Should implement array blocks\n        setWithPath(json, match[2].trim(), parseBody(match[3]), true)\n      }\n      else if (match[2] === \"\"){ // header is like []\n        json = Object.assign({}, json, parseBody(match[3]))\n      }\n      else {  // header is like [grand.parent]\n        setWithPath(json, match[2].trim(), parseBody(match[3]), false)\n      }\n\n  })\n\n  return  JSON.parse(JSON.stringify(json, replacer), reviver)\n}\n\nfunction parseBody (TOML) {\n\n  let matchThis = new RegExp(`^[ \\t]*(.+?) *[=:] *(?:\"((?!\")[\\\\w\\\\W]+?)\"|'{3,}((?!'{3,})[\\\\w\\\\W]+?)'{3,}|(\\\\[[\\\\w\\\\W]+?(?:(?: *])+ *$\\\\n*)+)|(\\\\{[\\\\w\\\\W]+?(?:(?: *})+ *$\\\\n*)+)|(.+) *)|^(.+)$`, 'gm')\n\n  let json = {}\n\n  markty(TOML, matchThis, (string, match) => {\n    // let [token (0),\n    //   key (1),\n    //   val_quotes (2), val_literal (3), val_array (4), val_json (5), val_noquotes (6),\n    //   trash (7)\n    // ] = match, k, v\n\n    let k, v\n\n    if (match[1]){\n      if (match[1].charAt(0) === \"#\") return\n      k = match[1].charAt(0) === '\\\"' && match[1].charAt(match[1].length-1) === '\\\"' ? match[1].slice(1, -1) : match[1]\n      if (match[2] || match[3]) {\n        v = match[2] || match[3].replace(/^(\\s*)(__>>\\[<<__)/gm, \"$1[\")\n      }\n      if (match[4] || match[5]) {\n        v = JSON.parse(`${match[4] || match[5]}`)\n      }\n      // val_noquotes is important: it is a value NOT surrounded by double-quotes\n      if (match[6]) {\n        match[6] = match[6].trim()\n        if (+match[6] === +match[6]){ v = Number(match[6])}\n        else if (match[6] === 'true' || match[6] === 'false'){ v = (match[6] === 'true') }\n        else if (match[6] === 'inf' || match[6] === '+inf'){ v = Infinity }\n        else if (match[6] === '-inf'){ v = -Infinity }\n        else if (parseInt(match[6], 16).toString(16) === match[6].toLowerCase() ){ v = parseInt(match[6], 16) }\n        else if (parseInt(match[6], 8).toString(8) === match[6].toLowerCase() ){ v = parseInt(match[6], 8) }\n        else if (parseInt(match[6], 2).toString(2) === match[6].toLowerCase() ){ v = parseInt(match[6], 2) }\n        // else if (dateRegex) {\n        //     /(\\d{4})-(\\d{1,2})-(\\d{1,2})(?:[ T](\\d{1,2}):(\\d{1,2})(?::(\\d{1,2}))?)?([Z+-])?(?:(\\d{1,2}):(\\d{2}))?/\n        // }\n        else { v = match[6] }\n      }\n      json[k] = v\n      return ''\n    }\n    // If a user puts a value on multiple lines (using line-breaks), WITHOUT using double-quotes\n    // everything coming after the line-break is trash\n    else if (match[7]) return ''\n  })\n\n  return json\n}\n\n// function sanitizeSpaces(str) {\n//   str = str.trim()\n//   str = (str.substr(0,1) === '\"' && str.substr(-1) === '\"') ? str.slice(1,-1) : str\n//   return str\n// }\n\nfunction setWithPath(obj, keys, val, asArray) {\n\tasArray = asArray ? true : false\n  keys.split && (keys=keys.split('.'))\n\tvar i=0, l=keys.length, t=obj, x\n\tfor (; i < l; ++i) {\n\n    // sanitize spaces\n    keys[i] = keys[i].trim()\n    keys[i] = (keys[i].substr(0,1) === '\"' && keys[i].substr(-1) === '\"') ? keys[i].slice(1,-1) : keys[i]\n\n    if (t instanceof Array){x = t[t.length-1]; i--} else { x = t[keys[i]] }\n\n    if (i === l-1) {\n      x instanceof Array ? t[keys[i]].push(val) : (t[keys[i]]=asArray?[val]:val)\n    }\n    else {\n      x instanceof Array ? ( t = x ) : (t = t[keys[i]] = (x == null ? {} : x))\n    }\n\t}\n}\n\n\nlet replacer = function(k,v){    \n  if (v !== v) { return '__>>NaN<<__' }\n  if (v === Infinity) { return '__>>Inf<<__' }\n  if (v === -Infinity) { return '__>>-Inf<<__' }\n  return v\n}\n\nlet reviver = function(k,v){\n  if (v === '__>>NaN<<__') { return NaN }\n  if (v === '__>>Inf<<__') { return Infinity }\n  if (v === '__>>-Inf<<__') { return -Infinity }\n  return v\n}"],"names":["let"],"mappings":"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"}