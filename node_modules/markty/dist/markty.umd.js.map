{"version":3,"sources":["../src/index.js"],"names":["markty","str","reg","rules","unlimited","let","prev","match","chunk","last","out","tokenizer","exec","substring","index","lastIndex","test","RegExp"],"mappings":"qKACA,QAAwBA,GAAOC,EAAKC,EAAKC,EAAOC,mBAAY,EAG1D,KAFAC,GAAIC,GAAMC,EAAOC,EAAOC,EAAO,EAAGC,EAAM,GACpCC,EAAYT,EACPK,EAAQI,EAAUC,KAAKX,IAC9BK,EAAOL,EAAIY,UAAUJ,EAAMF,EAAMO,OACjCL,EAAOE,EAAUI,UAGfP,EADEL,GAA2B,kBAAlB,GACHA,EAAMF,EAAKM,GAEXJ,EAGVO,GAAOJ,EACPI,GAAOF,CAIT,OAFAE,IAAOT,EAAIY,UAAUJ,GAEjBE,EAAUK,KAAKN,KAAsB,IAAdN,EAClBJ,EAAOU,EAAK,GAAIO,QAAON,GAAYR,GAAO,GAE1CO","file":"markty.umd.js","sourcesContent":["/* eslint no-unused-vars: \"warn\" */\nexport default function markty(str, reg, rules, unlimited = false) {\n  let prev, match, chunk, last = 0, out = '';\n  let tokenizer = reg;\n  while ( (match = tokenizer.exec(str)) ) {\n    prev = str.substring(last, match.index);\n    last = tokenizer.lastIndex;\n\n    if (rules && typeof(rules) === \"function\") {\n      chunk = rules(str, match);\n    } else {\n      chunk = rules;\n    }\n\n    out += prev;\n    out += chunk;\n  }\n  out += str.substring(last);\n\n  if( tokenizer.test(out) && unlimited === true ) {\n    return markty(out, new RegExp(tokenizer), rules, true);\n  } else {\n    return out;\n  }\n}\n"]}