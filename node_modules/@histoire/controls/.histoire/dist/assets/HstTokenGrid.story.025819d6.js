var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
import { ax as _export_sfc, d as defineComponent, c as computed, r as ref, a as openBlock, b as createElementBlock, F as Fragment, J as renderList, f as renderSlot, e as createBaseVNode, M as withDirectives, i as unref, ay as VTooltip, R as createTextVNode, t as toDisplayString, j as createBlock, m as createCommentVNode, h as normalizeStyle, q as resolveComponent, k as withCtx, l as createVNode } from "./vendor.2833ae3d.js";
import { H as HstCopyIcon } from "./HstCopyIcon.e40e725e.js";
var HstTokenGrid_vue_vue_type_style_index_0_lang = "";
const _hoisted_1 = ["onMouseenter"];
const _hoisted_2 = { class: "htw-flex htw-gap-1" };
const _hoisted_3 = { class: "htw-my-0 htw-truncate htw-shrink" };
const _hoisted_4 = { class: "htw-flex htw-gap-1" };
const _hoisted_5 = { class: "htw-my-0 htw-opacity-50 htw-truncate htw-shrink" };
const __default__ = {
  name: "HstTokenGrid"
};
const _sfc_main$1 = /* @__PURE__ */ defineComponent(__spreadProps(__spreadValues({}, __default__), {
  props: {
    tokens: { type: Object, required: true },
    colSize: { type: Number, required: false, default: 180 },
    getName: { type: Function, required: false, default: null }
  },
  setup(__props) {
    const props = __props;
    const processedTokens = computed(() => {
      const list = props.tokens;
      const getName = props.getName;
      return Object.entries(list).map(([key, value]) => {
        const name = getName ? getName(key, value) : key;
        return {
          key,
          name,
          value: typeof value === "number" ? value.toString() : value
        };
      });
    });
    const colSizePx = computed(() => `${props.colSize}px`);
    const hover = ref(null);
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: "htw-bind-col-size htw-grid htw-gap-4 htw-m-4",
        style: normalizeStyle({
          "--histoire-col-size": unref(colSizePx)
        })
      }, [
        (openBlock(true), createElementBlock(Fragment, null, renderList(unref(processedTokens), (token) => {
          return openBlock(), createElementBlock("div", {
            key: token.key,
            class: "htw-flex htw-flex-col htw-gap-2",
            onMouseenter: ($event) => hover.value = token.key,
            onMouseleave: _cache[0] || (_cache[0] = ($event) => hover.value = null)
          }, [
            renderSlot(_ctx.$slots, "default", { token }),
            createBaseVNode("div", null, [
              createBaseVNode("div", _hoisted_2, [
                withDirectives((openBlock(), createElementBlock("pre", _hoisted_3, [
                  createTextVNode(toDisplayString(token.name), 1)
                ])), [
                  [unref(VTooltip), token.name.length > __props.colSize / 8 ? token.name : ""]
                ]),
                hover.value === token.key ? (openBlock(), createBlock(HstCopyIcon, {
                  key: 0,
                  content: token.name,
                  class: "htw-flex-none"
                }, null, 8, ["content"])) : createCommentVNode("v-if", true)
              ]),
              createBaseVNode("div", _hoisted_4, [
                withDirectives((openBlock(), createElementBlock("pre", _hoisted_5, [
                  createTextVNode(toDisplayString(token.value), 1)
                ])), [
                  [unref(VTooltip), token.value.length > __props.colSize / 8 ? token.value : ""]
                ]),
                hover.value === token.key ? (openBlock(), createBlock(HstCopyIcon, {
                  key: 0,
                  content: typeof token.value === "string" ? token.value : JSON.stringify(token.value),
                  class: "htw-flex-none"
                }, null, 8, ["content"])) : createCommentVNode("v-if", true)
              ])
            ])
          ], 40, _hoisted_1);
        }), 128))
      ], 4);
    };
  }
}));
_sfc_main$1.__file = "src/components/design-tokens/HstTokenGrid.vue";
var HstTokenGrid = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["__file", "/Users/akryum/Projects/histoire/packages/histoire-controls/src/components/design-tokens/HstTokenGrid.vue"]]);
const _sfc_main = /* @__PURE__ */ defineComponent({
  name: "HstTokenGrid.story",
  setup(__props) {
    const tokens = {
      sm: "filter: drop-shadow(0 1px 1px rgb(0 0 0 / 0.05))",
      DEFAULT: "filter: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06))",
      md: "filter: drop-shadow(0 4px 3px rgb(0 0 0 / 0.07)) drop-shadow(0 2px 2px rgb(0 0 0 / 0.06))",
      lg: "filter: drop-shadow(0 10px 8px rgb(0 0 0 / 0.04)) drop-shadow(0 4px 3px rgb(0 0 0 / 0.1))",
      xl: "filter: drop-shadow(0 20px 13px rgb(0 0 0 / 0.03)) drop-shadow(0 8px 5px rgb(0 0 0 / 0.08))",
      "2xl": "filter: drop-shadow(0 25px 25px rgb(0 0 0 / 0.15))",
      none: "filter: drop-shadow(0 0 #0000)"
    };
    return (_ctx, _cache) => {
      const _component_Variant = resolveComponent("Variant");
      const _component_Story = resolveComponent("Story");
      return openBlock(), createBlock(_component_Story, {
        title: "design-tokens/HstTokenGrid",
        "responsive-disabled": ""
      }, {
        default: withCtx(() => [
          createVNode(_component_Variant, { title: "default" }, {
            default: withCtx(() => [
              createVNode(HstTokenGrid, {
                tokens,
                "get-name": (key) => key === "DEFAULT" ? "drop-shadow" : `drop-shadow-${key}`,
                "col-size": 160
              }, {
                default: withCtx(({ token }) => [
                  createBaseVNode("div", {
                    class: "htw-w-32 htw-h-32 htw-bg-white dark:htw-bg-black htw-rounded htw-mb-2",
                    style: normalizeStyle(token.value)
                  }, null, 4)
                ]),
                _: 1
              }, 8, ["get-name"])
            ]),
            _: 1
          })
        ]),
        _: 1
      });
    };
  }
});
_sfc_main.__file = "src/components/design-tokens/HstTokenGrid.story.vue";
var HstTokenGrid_story = /* @__PURE__ */ _export_sfc(_sfc_main, [["__file", "/Users/akryum/Projects/histoire/packages/histoire-controls/src/components/design-tokens/HstTokenGrid.story.vue"]]);
export { HstTokenGrid_story as default };
